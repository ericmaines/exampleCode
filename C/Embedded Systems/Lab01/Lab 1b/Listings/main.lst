


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
    3 00000000         
    4 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
    5 00000000                 THUMB
    6 00000000                 EXPORT           Start
    7 00000000                 EXPORT           Example_Function
    8 00000000                 EXPORT           Part3_Function
    9 00000000                 EXPORT           Part4_Function
   10 00000000                 EXPORT           Part5_Function
   11 00000000                 IMPORT           delay
   12 00000000                 IMPORT           leds_off
   13 00000000                 IMPORT           PortF_Init
   14 00000000                 IMPORT           Example
   15 00000000                 IMPORT           Part3
   16 00000000                 IMPORT           Part4
   17 00000000                 IMPORT           Part5
   18 00000000         
   19 00000000         Start
   20 00000000 F7FF FFFE       BL               PortF_Init  ; Initialize the LE
                                                            Ds and Pushbuttons
   21 00000004 F000 F81C       BL               debug       ; Useful for parts 
                                                            2 and 3
   22 00000008         loop
   23 00000008 4930            LDR              R1, =GPIO_PORTF_DATA_R
   24 0000000A 6808            LDR              R0, [R1]
   25 0000000C F000 0011       AND              R0, #0x11   ;Get just the pushb
                                                            utton values
   26 00000010 2811            CMP              R0, #0x11   ;No buttons pressed
                                                            ?
   27 00000012 D102            BNE              checkSW1
   28 00000014 F7FF FFFE       BL               Example
   29 00000018 E7F6            B                loop
   30 0000001A         checkSW1
   31 0000001A 2801            CMP              R0, #0x01   ;SW1 pressed?
   32 0000001C D102            BNE              checkSW2
   33 0000001E F7FF FFFE       BL               Part3
   34 00000022 E006            B                blink
   35 00000024         checkSW2
   36 00000024 2810            CMP              R0, #0x10   ;SW2 pressed?
   37 00000026 D102            BNE              both
   38 00000028 F7FF FFFE       BL               Part4
   39 0000002C E001            B                blink
   40 0000002E         both
   41 0000002E F7FF FFFE       BL               Part5       ;Both must be press
                                                            ed
   42 00000032         
   43 00000032         ;Create blinking effect
   44 00000032         blink
   45 00000032 F7FF FFFE       BL               delay
   46 00000036 F7FF FFFE       BL               leds_off
   47 0000003A F7FF FFFE       BL               delay
   48 0000003E         
   49 0000003E E7E3            B                loop
   50 00000040         
   51 00000040         



ARM Macro Assembler    Page 2 


   52 00000040         
   53 00000040         debug
   54 00000040         ;Place parts 1 and 2 here
   55 00000040         
   56 00000040         ;Part 1
   57 00000040 F04F 0108       MOV              r1,#0x00000008
   58 00000044 F06F 0202       MOV              r2,#0xFFFFFFFD
   59 00000048 F06F 4300       MOV              r3,#0x7FFFFFFF
   60 0000004C 188C            ADDS             r4, r1, r2  ;Add X and Y - stor
                                                            e in r4
   61 0000004E 1A4D            SUBS             r5, r1, r1  ;Sub X and X - stor
                                                            e in r5
   62 00000050 18CE            ADDS             r6, r1, r3  ;Add X and Z - stor
                                                            e in r6
   63 00000052 1AD7            SUBS             r7, r2, r3  ;Sub Y and Z - stor
                                                            e in r7
   64 00000054 EB12 0803       ADDS             r8, r2, r3  ;Add Y and Z - stor
                                                            e in r8
   65 00000058         
   66 00000058         ;Part 2
   67 00000058         
   68 00000058 F04F 5700       MOV              R7, #0x20000000
   69 0000005C F107 0702       ADD              r7, #2
   70 00000060         
   71 00000060 683E            LDR              r6, [r7]
   72 00000062         
   73 00000062 883E            LDRH             r6, [r7]
   74 00000064         
   75 00000064 783E            LDRB             r6, [r7]
   76 00000066         
   77 00000066 F9B7 6000       LDRSH            r6, [r7]
   78 0000006A         
   79 0000006A F997 6000       LDRSB            r6, [r7]
   80 0000006E         
   81 0000006E         
   82 0000006E 4770            BX               LR          ;Returns to main fu
                                                            nction
   83 00000070         
   84 00000070         
   85 00000070         
   86 00000070         ; Returns Z = A+B
   87 00000070         ; A and B are in R0 and R1, respectively
   88 00000070         ; Z should be placed in R0
   89 00000070         Example_Function
   90 00000070 4408            ADD              R0, R0, R1  ;Comment out this i
                                                            nstruction to see t
                                                            he Example fail
   91 00000072 4770            BX               LR
   92 00000074         
   93 00000074         
   94 00000074         ; Should return Z = (A << 2)|(B & 15)
   95 00000074         ; Assume A and B are in R0 and R1, respectively
   96 00000074         ; The value of Z should be placed in R0 at the end
   97 00000074         Part3_Function
   98 00000074         
   99 00000074 EA4F 0380       LSL              r3, r0, #2
  100 00000078 F001 040F       AND              r4, r1, #15
  101 0000007C EA43 0004       ORR              r0, r3, r4
  102 00000080         



ARM Macro Assembler    Page 3 


  103 00000080 4770            BX               LR
  104 00000082         
  105 00000082         
  106 00000082         ; Should return Z = ((A + B) + (A - B)) | (A << B)
  107 00000082         ; Assume A and B are in R0 and R1, respectively
  108 00000082         ; The value of Z should be placed in R0 at the end
  109 00000082         Part4_Function
  110 00000082         
  111 00000082 EB00 0301       ADD              r3, r0, r1  ; A+B and store in 
                                                            r3
  112 00000086 EBA0 0401       SUB              r4, r0, r1  ; A-B and store in 
                                                            r4
  113 0000008A EB03 0504       ADD              r5, r3, r4  ; (A+B) + (A-B) sto
                                                            re in r5
  114 0000008E FA00 F301       LSL              r3, r0, r1  ; LSL A by B store 
                                                            in r3
  115 00000092 EA45 0003       ORR              r0, r5, r3
  116 00000096         
  117 00000096         
  118 00000096 4770            BX               LR
  119 00000098         
  120 00000098         
  121 00000098         ; Should return Z = X + Y
  122 00000098         ; Where X = ((A*8)|(B*4)|(C*2))
  123 00000098         ; and Y = ((B xor 2)|(C xor 4)
  124 00000098         ; Assume A, B, and C are in R0, R1, and R2, respectively
                       
  125 00000098         ; The value of Z should be placed in R0 at the end
  126 00000098         Part5_Function
  127 00000098         
  128 00000098         ;A = r0
  129 00000098         ;B = r1
  130 00000098         ;C = r2
  131 00000098         
  132 00000098 F04F 0808       MOV              r8, #8
  133 0000009C F04F 0904       MOV              r9, #4
  134 000000A0 F04F 0702       MOV              r7, #2
  135 000000A4         
  136 000000A4 FB00 F308       MUL              r3, r0, r8
  137 000000A8 FB01 F409       MUL              r4, r1, r9
  138 000000AC FB02 F507       MUL              r5, r2, r7
  139 000000B0         
  140 000000B0 EA43 0304       ORR              r3, r3, r4
  141 000000B4 EA43 0305       ORR              r3, r3, r5  ; X = r3
  142 000000B8         
  143 000000B8 F081 0402       EOR              r4, r1, #2
  144 000000BC F082 0504       EOR              r5, r2, #4
  145 000000C0 EA44 0405       ORR              r4, r4, r5  ; Y = r4
  146 000000C4         
  147 000000C4 EB03 0004       ADD              r0, r3, r4
  148 000000C8         
  149 000000C8 4770            BX               LR
  150 000000CA         
  151 000000CA         
  152 000000CA         
  153 000000CA 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  154 000000CC                 END                          ; end of file



ARM Macro Assembler    Page 4 


              400253FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Users\e
ricm\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\Device\ARM\ARMCM4\Include -IC:\Kei
l_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSI
ON SETA 529" --predefine="ARMCM4 SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 4 in file main.s
   Uses
      None
Comment: .text unused
Example_Function 00000070

Symbol: Example_Function
   Definitions
      At line 89 in file main.s
   Uses
      At line 7 in file main.s
Comment: Example_Function used once
Part3_Function 00000074

Symbol: Part3_Function
   Definitions
      At line 97 in file main.s
   Uses
      At line 8 in file main.s
Comment: Part3_Function used once
Part4_Function 00000082

Symbol: Part4_Function
   Definitions
      At line 109 in file main.s
   Uses
      At line 9 in file main.s
Comment: Part4_Function used once
Part5_Function 00000098

Symbol: Part5_Function
   Definitions
      At line 126 in file main.s
   Uses
      At line 10 in file main.s
Comment: Part5_Function used once
Start 00000000

Symbol: Start
   Definitions
      At line 19 in file main.s
   Uses
      At line 6 in file main.s
Comment: Start used once
blink 00000032

Symbol: blink
   Definitions
      At line 44 in file main.s
   Uses
      At line 34 in file main.s
      At line 39 in file main.s

both 0000002E




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: both
   Definitions
      At line 40 in file main.s
   Uses
      At line 37 in file main.s
Comment: both used once
checkSW1 0000001A

Symbol: checkSW1
   Definitions
      At line 30 in file main.s
   Uses
      At line 27 in file main.s
Comment: checkSW1 used once
checkSW2 00000024

Symbol: checkSW2
   Definitions
      At line 35 in file main.s
   Uses
      At line 32 in file main.s
Comment: checkSW2 used once
debug 00000040

Symbol: debug
   Definitions
      At line 53 in file main.s
   Uses
      At line 21 in file main.s
Comment: debug used once
loop 00000008

Symbol: loop
   Definitions
      At line 22 in file main.s
   Uses
      At line 29 in file main.s
      At line 49 in file main.s

12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 2 in file main.s
   Uses
      At line 23 in file main.s
Comment: GPIO_PORTF_DATA_R used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Example 00000000

Symbol: Example
   Definitions
      At line 14 in file main.s
   Uses
      At line 28 in file main.s
Comment: Example used once
Part3 00000000

Symbol: Part3
   Definitions
      At line 15 in file main.s
   Uses
      At line 33 in file main.s
Comment: Part3 used once
Part4 00000000

Symbol: Part4
   Definitions
      At line 16 in file main.s
   Uses
      At line 38 in file main.s
Comment: Part4 used once
Part5 00000000

Symbol: Part5
   Definitions
      At line 17 in file main.s
   Uses
      At line 41 in file main.s
Comment: Part5 used once
PortF_Init 00000000

Symbol: PortF_Init
   Definitions
      At line 13 in file main.s
   Uses
      At line 20 in file main.s
Comment: PortF_Init used once
delay 00000000

Symbol: delay
   Definitions
      At line 11 in file main.s
   Uses
      At line 45 in file main.s
      At line 47 in file main.s

leds_off 00000000

Symbol: leds_off
   Definitions
      At line 12 in file main.s
   Uses
      At line 46 in file main.s
Comment: leds_off used once
7 symbols
355 symbols in table
